def find_low_index(nums, target):
    high = len(nums) - 1
    low = 0
    mid = high // 2

    while low <= high:
        if nums[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

        mid = (high + low) // 2

    return low if (low < len(nums) and nums[low] == target) else -1


def find_high_index(nums, target):
    high = len(nums) - 1
    low = 0
    mid = high // 2

    while low <= high:
        if nums[mid] <= target:
            low = mid + 1
        else:
            high = mid - 1

        mid = (high + low) // 2

    return high if (high < len(nums) and nums[high] == target) else -1


import unittest
from parameterized import parameterized


class TestHighLowIndex(unittest.TestCase):

    test_params = [
        (
            [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 9],
            5,
            15,
            17,
        ),
        (
            [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 9],
            2,
            3,
            7,
        ),
        (
            [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 9],
            8,
            -1,
            -1,
        ),
        (
            [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 9],
            9,
            24,
            24,
        ),
        (
            [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 9],
            4,
            11,
            14,
        ),
    ]

    @parameterized.expand(test_params)
    def test_high_low(self, nums, target, low_index, high_index):

        self.assertEquals(find_low_index(nums, target), low_index)
        self.assertEquals(find_high_index(nums, target), high_index)
